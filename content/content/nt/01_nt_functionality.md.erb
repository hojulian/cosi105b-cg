---
title: nano Twitter Functionality
---
#### General Notes

* NanoTwitter (nT) is a baby version of Twitter designed as a platform for experimentation with scaling issues.
* The list of features and URLs is quite incomplete. It is meant to set the pattern for you to build upon.
* All the URLs, both for the User Interface and for the Web Services API will attempt to follow REST design principles as far as possible.

#### nT Functionality
* Users:
  * can register for an account by supplying an email a name and a password
  * are never deleted
  * are assigned a numeric id (the record id)
* Logged in users
  * Can follow and unfollow other registered users
  * Can tweet
  * Can see the flow of the last n tweets by the users that they have followed
* Non-logged in users
  * See the flow of the last n tweets by any user
* Tweets
  * Consist of
    * a 140 characters of text
    * a date-time of creation
    * Anything else you want to add to make it more impressive
  * Belong to one user
  * Can never be deleted

#### nT Web Services (REST) API
* All paths start with /api/v1
* /tweets/23 - return tweet with id
* /users/23 - return user information for user 23
* /tweets/recent - return the recent n tweets
* /users/23/tweets - return the users recent tweets
* You need to figure out the other ones. The objective is that someone can write, for example, an iPhone nanoTwitter client that would use this API to implement the functionality.

* Values as JSON, as example:
  * Tweet:
`{  "id": 123,
    "text": foobar,
    "created": jan-11-2015
}`
  * User: `{"id": 12, "email": xu@nanotwitter.org}`
  * List of tweets: `[<tweet>, <tweet>,...]`
  * Follow list: `["user_id": 22, "user_id": 23, ...]`

#### nT User Interface
* Basic bootstrappy html/css/javascript interface
* Clean but doesn't have to be fancy

##### Routes
* Non-logged-in root page (/)
  * List of the most recent 50 tweets from any user, each with link to tweeter's page
  * Login link
* Logged-in root page (/)
  * Maps to /user/1234 when user 1234 is logged in
* Specific user's page (/user/1234)
  * If this is logged in users own page
    * Equiv to logged in root
    * Ability to tweet (i.e. equiv to /)
  * If this is not logged in users own page, but a user is logged in
    * Button to follow that user (available only if logged in)
  * If no one is logged in
    * Display login link
  * In all cases, also:
    * Top 50 tweets of users followed by logged in user
    * User's profile info
    * Link to list of users followed by this user. Link text is a count.
    * Link to list of tweets made by this user. Link text is a count.
    * Link to list of users following this user. Link text is a count.
    * Registration
      * Display the user registration page (/user/register)
      * Display user login prompt, and check for correct password (/login)
      * Logout (/logout)

<%= include_topic :nt_test_interface %>

<%= include_topic :nt_scalability_testing_protocol %>
