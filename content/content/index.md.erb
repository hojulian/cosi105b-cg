---
title: Welcome!
section: root
---
<div class="jumbotron">
	<h2>Software Engineering for Scalability </h2>
	<p>Learn how large software teams build large systems. How does programming change when a system has thousands of modules and dozens of programmers? How do you ensure that the systems you build can evolve and grow? How do you put together an architecture that will survive an onslaught of 500,000 users or more? This course introduces you to concepts, principles, techniques and research that try to answer those questions.</p>
</div>

#### Scale

What happens when systems have programs in multiple languages, hundreds of modules and classes, developed by teams of engineers? We need to approach programming in a whole new way, paying attention to good design, patterns, testing, source code management and other basics. In addition when software is developed in teams there are ways of approaching organization of the project, leadership, planning and scheduling.

How do you design a system that is meant to support millions of users? How will it perform? You certainly canâ€™t just get a bigger and bigger computer. This is most certainly an evolving space with new work happening both in academia and industry. Yet there are well established and tested fundamentals of architecture which we will look at to better understand this fascinating and important space.

#### Programming

There will be multiple programming assignments where students will work individually or in teams to modify and enhance parts of the NanoTwitter software. Students will have to build and test on their own computers and then deploy software to servers in the cloud. We will subject the software to artificial loads to see how they behave and then see how changes affect performance.

#### Prerequisites and admission

* Prerequites for this course is that you have taken Cosi 12b and/or 21a.

##### For more information contact Pito Salas, pitosalas@brandeis.edu
